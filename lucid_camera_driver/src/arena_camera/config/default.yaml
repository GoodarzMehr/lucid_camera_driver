# Note: used by the package .launch files

# The tf frame under which the images were published.
camera_frame: lucid_camera

# The DeviceUserID of the camera. If empty, the first camera found in the
# device list will be used.
device_user_id: ""

# The CameraInfo URL (Uniform Resource Locator) where the optional intrinsic
# camera calibration parameters are stored. This URL string will be parsed
# from the ROS-CameraInfoManager:
# http://docs.ros.org/api/camera_info_manager/html/classcamera__info__manager_
# 1_1CameraInfoManager.html#details
camera_info_url: ""

# The encoding of the pixels, i.e. channel meaning, ordering, and size
# taken from the list of strings in include/sensor_msgs/image_encodings.h.
# The supported encodings are 'mono8', 'bgr8', 'rgb8', 'bayer_bggr8',
# 'bayer_gbrg8' and 'bayer_rggb8'.
# Default values are 'mono8' and 'rgb8'.
image_encoding: "bayer_rggb8"

# Binning factor to get downsampled images. It refers here to any camera
# setting which combines rectangular neighborhoods of pixels into larger
# "super-pixels." It reduces the resolution of the output image to
# (width / binning_x) x (height / binning_y).
# The default values binning_x = binning_y = 0 are considered the same
# as binning_x = binning_y = 1 (no subsampling).
binning_x: 1
binning_y: 1

# The desired publisher frame rate if listening to the topics.
# This parameter can only be set once at startup.
# Calling the GrabImages-Action can result in a higher frame rate.
frame_rate: 10.0

# Mode of camera's shutter.
# The supported modes are "rolling", "global" and "global_reset".
# Default value is "" (empty) means "default_shutter_mode".
shutter_mode: ""

##########################################################################
######################## Image Intensity Settings ########################
##########################################################################
# The following settings do *NOT* have to be set. Each camera has default
# values which provide an automatic image adjustment resulting in valid
# images
##########################################################################

# The exposure time in microseconds to be set after opening the camera.
# exposure: 100000.0

# The target gain in percent of the maximal value the camera supports.
# For USB cameras the gain is in dB, for GigE cameras it is given in so-
# called 'device specific units'.
# gain: 0.5

# Gamma correction of pixel intensity.
# Adjusts the brightness of the pixel values output by the camera's sensor
# to account for a non-linearity in the human perception of brightness or
# of the display system (such as CRT).
# gamma: 1.0

# The average intensity value of the image. It depends on the exposure time
# as well as the gain setting. If 'exposure' is provided, the interface will
# try to reach the desired brightness by only varying the gain (which may
# often fail, because the range of possible exposure values is many times
# higher than the gain range). If 'gain' is provided, the interface will try
# to reach the desired brightness by only varying the exposure time. If 'gain'
# and 'exposure' are both given, it is not possible to reach the brightness,
# because both are assumed to be fixed.
brightness: 70

# Only relevant, if 'brightness' is set:
# If the camera should try to reach and/or keep the specified brightness, thus
# adapting to changing light conditions, at least one of the following flags
# must be set.
# If both are set, the interface will use the profile that tries to keep the
# gain at a minimum to reduce white noise.
# The exposure_auto flag indicates that the desired brightness will be reached
# by changing the exposure time.
# The gain_auto flag indicates that the desired brightness will be reached by
# adapting the gain.
exposure_auto: true
gain_auto: true

##########################################################################

# The timeout while searching for the exposure which results in the desired
# brightness. For slow systems this has to be increased.
# exposure_search_timeout: 5.0

# Exposure time search can be limited with an upper bound. This is to prevent
# very high exposure times and resulting timeouts.
# A typical value for this upper bound is ~2000000us.
# auto_exposure_upper_limit: 2000000.0

# MTU size. Only used for GigE cameras.
# To prevent lost frames the camera has to be configured using the MTU size
# the network card supports. A value greater than 3000 should be good (1500
# for RaspberryPI).
# mtu_size: 3000

# Only used for GigE cameras.
# The inter-package delay in ticks to prevent lost frames.
# For most GigE cameras, a value of 1000 is reasonable.
# For cameras used on a RaspberryPI this value should be set to 11772.
# inter_pkg_delay: 1000